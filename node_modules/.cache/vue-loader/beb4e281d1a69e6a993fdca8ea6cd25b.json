{"remainingRequest":"/Users/mk/Desktop/git/my-web-ar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mk/Desktop/git/my-web-ar/src/views/create/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/mk/Desktop/git/my-web-ar/src/views/create/index.vue","mtime":1575261825942},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/css-loader/dist/cjs.js","mtime":1575261815245},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1575261824991},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/postcss-loader/src/index.js","mtime":1575261821992},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/sass-loader/dist/cjs.js","mtime":1575261823243},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/cache-loader/dist/cjs.js","mtime":1575261812576},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/vue-loader/lib/index.js","mtime":1575261824991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNjcmVhdGUgewogICNwYXJhbXMgewogICAgd2lkdGg6IDEwMCU7CiAgICAmID4gZGl2IHsKICAgICAgbWFyZ2luOiAwIGF1dG8gMTVweCAwOwoKICAgICAgJiA+IGgzIHsKICAgICAgICBwYWRkaW5nOiAxMHB4IDAgNXB4IDA7CiAgICAgICAgbWFyZ2luOiAwOwogICAgICB9CgogICAgICAmID4gaW5wdXQgewogICAgICAgIHdpZHRoOiA4MCU7CiAgICAgIH0KICAgIH0KCiAgICAubWFya2VyIHsKICAgICAgI3N3aXRjaCB7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBkaXYgewogICAgICAgICAgZm9udC1zaXplOiAxcmVtOwogICAgICAgICAgdmVydGljYWwtYWxpZ246IDA7CiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7CiAgICAgICAgfQoKICAgICAgICAuc3dpdGNoIHsKICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwOwogICAgICAgIH0KICAgICAgfQoKICAgICAgI21hcmtlckFyZWEgewogICAgICAgICNoaXJvIHsKICAgICAgICAgIG1heC1oZWlnaHQ6IDMwMHB4OwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KCiAgYS1zY2VuZSB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiAzMDBweDsKICAgIGhlaWdodDogMzAwcHg7CiAgICBiYWNrZ3JvdW5kOiAjYzNjM2MzOwogIH0KCiAgI2NyZWF0ZS1idXR0b25zIHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIG1hcmdpbjogMTBweCAwIDUwcHggMDsKICB9CgogIC5hbGVydCB7CiAgICBtYXJnaW46IDAgMCAxMHB4IDA7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/create","sourcesContent":["<template>\n  <div id=\"create\">\n    <h2>作成する</h2>\n    <div id=\"params\">\n      <div class=\"title\">\n        <h3>タイトル</h3>\n        <input placeholder=\"タイトル\" v-model=\"title\" />\n      </div>\n      <div id=\"createdModel\">\n        <h3>モデル</h3>\n        <model ref=\"model\"></model>\n      </div>\n\n      <div class=\"marker\">\n        <h3>マーカー</h3>\n        <div id=\"switch\">\n          <div v-if=\"original\">オリジナルマーカーを使う</div>\n          <div v-else>デフォルトマーカーを使う</div>\n          <select class=\"switch\" v-model=\"original\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\n            <option :value=\"false\">false</option>\n            <option :value=\"true\">true</option>\n          </select>\n        </div>\n        <div id=\"markerArea\">\n          <generator v-if=\"original\" ref=\"generator\" @blob=\"postAr\"></generator>\n          <img v-else id=\"hiro\" :src=\"hiro\" :alt=\"hiro\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"alert\" v-if=\"titleAlert\" title=\"タイトルを入力してください\" type=\"error\" :closable=\"false\"></div>\n    <div class=\"alert\" v-if=\"imgAlert\" title=\"画像をアップロードしてください\" type=\"error\" :closable=\"false\"></div>\n    <div id=\"create-buttons\">\n      <button type=\"danger\" @click=\"getPattOfPostData\">作成</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport model from \"@/views/create/model.vue\";\nimport generator from \"@/views/create/generator.vue\";\nimport firebase from \"firebase\";\n\nexport default {\n  data() {\n    return {\n      title: \"\",\n      models: [],\n      modelList: [],\n      original: false,\n      hiro: require(\"@/assets/img/HIRO.jpg\"),\n      titleAlert: false,\n      imgAlert: false,\n      pattUrl: \"\"\n    };\n  },\n  components: {\n    model,\n    generator\n  },\n  methods: {\n    getModel(modelList) {\n      return modelList;\n    },\n    titleChk() {\n      if (this.title == \"\") {\n        this.titleAlert = true;\n        return true;\n      } else {\n        this.titleAlert = false;\n      }\n    },\n    imgChk(marker) {\n      // this.original == true && 画像がない\n      if (this.original == true && marker == this.$store.state.defaultMarker) {\n        this.imgAlert = true;\n        return true;\n      } else {\n        this.imgAlert = false;\n      }\n    },\n    getModelListOfPostData() {\n      const refs = this.$refs;\n      this.modelList = refs.model.createModel();\n      console.log(this.modelList);\n    },\n    getPattOfPostData() {\n      if (this.titleChk()) {\n        return;\n      }\n\n      const refs = this.$refs;\n      this.modelList = refs.model.createModel();\n\n      if (this.original == true) {\n        console.log(this.$refs.generator);\n        refs.generator.getPatt();\n      } else {\n        this.postAr(null);\n      }\n    },\n    createQrCode(key) {\n      return `https://chart.apis.google.com/chart?chs=300x300&cht=qr&chl=https://web-ar-change-ar-page.firebaseapp.com/?q=${key}`;\n    },\n    NodeToHtml(node) {\n      if (!node || !Array.isArray(node)) return;\n\n      var tmpElmt = document.createElement(\"div\");\n      var i = 0;\n      var len = 0;\n      var nodes = [];\n\n      // 高速処理するが対応ブラウザを考えinnerHTMLを使用\n      // tmpElmt.innerHTML = htmlStr;\n      // tmpElmt.insertAdjacentHTML('beforeend', htmlStr);\n\n      return tmpElmt.childNodes;\n    },\n    uploadPatt(blob, fileName) {\n      // Create a root reference\n      var storageRef = firebase.storage().ref();\n\n      // Create a reference to 'images/mountains.jpg'\n      var mountainImagesRef = storageRef.child(`patt/${fileName}.patt`);\n\n      if (blob) {\n        console.log(\"file\");\n        console.log(blob);\n\n        mountainImagesRef.put(blob).then(function(snapshot) {\n          console.log(\"Uploaded a blob\");\n          console.log(snapshot);\n        });\n      }\n    },\n    postAr(blob) {\n      // Get a key for a new Post.\n      var newPostKey = firebase\n        .database()\n        .ref()\n        .child(\"posts\")\n        .push().key;\n\n      // A post entry.\n      var postData = {};\n      if (this.original) {\n        const refs = this.$refs;\n        var marker = refs.generator.getMarker();\n        if (this.imgChk(marker)) {\n          return;\n        }\n        console.log(\"blob by $emit\");\n        console.log(blob);\n        this.uploadPatt(blob, newPostKey);\n\n        postData = {\n          title: this.title,\n          marker: marker,\n          qr: this.createQrCode(newPostKey),\n          model: this.modelList,\n          original: this.original\n        };\n      } else {\n        postData = {\n          title: this.title,\n          qr: this.createQrCode(newPostKey),\n          model: this.modelList,\n          original: this.original\n        };\n      }\n\n      // Write the new post's data simultaneously in the posts list and the user's post list.\n      var updates = {};\n      updates[\"/data/\" + newPostKey] = postData;\n\n      console.log(\"post:\", postData);\n\n      this.$router.push(\"/list\");\n      return firebase\n        .database()\n        .ref()\n        .update(updates);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#create {\n  #params {\n    width: 100%;\n    & > div {\n      margin: 0 auto 15px 0;\n\n      & > h3 {\n        padding: 10px 0 5px 0;\n        margin: 0;\n      }\n\n      & > input {\n        width: 80%;\n      }\n    }\n\n    .marker {\n      #switch {\n        display: flex;\n        div {\n          font-size: 1rem;\n          vertical-align: 0;\n          margin-right: 15px;\n        }\n\n        .switch {\n          margin-left: 0;\n        }\n      }\n\n      #markerArea {\n        #hiro {\n          max-height: 300px;\n        }\n      }\n    }\n  }\n\n  a-scene {\n    display: block;\n    width: 300px;\n    height: 300px;\n    background: #c3c3c3;\n  }\n\n  #create-buttons {\n    text-align: center;\n    margin: 10px 0 50px 0;\n  }\n\n  .alert {\n    margin: 0 0 10px 0;\n  }\n}\n</style>\n"]}]}