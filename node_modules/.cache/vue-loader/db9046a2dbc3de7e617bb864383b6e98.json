{"remainingRequest":"/Users/mk/Desktop/webar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mk/Desktop/webar/src/views/create/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/mk/Desktop/webar/src/views/create/index.vue","mtime":1574694375997},{"path":"/Users/mk/Desktop/webar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLy8gaW1wb3J0IG1vZGVsIGZyb20gIkAvdmlldy9tb2RlbC52dWUiOwppbXBvcnQgZ2VuZXJhdG9yIGZyb20gIkAvdmlldy9tYXJrZXJUcmFpbmluZy9leGFtcGxlcy9nZW5lcmF0b3IudnVlIjsKaW1wb3J0IGZpcmViYXNlIGZyb20gImZpcmViYXNlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGl0bGU6ICIiLAogICAgICBtb2RlbHM6IFtdLAogICAgICBtb2RlbExpc3Q6IFtdLAogICAgICBvcmlnaW5hbDogZmFsc2UsCiAgICAgIC8vIGhpcm86IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9ISVJPLmpwZyIpLAogICAgICB0aXRsZUFsZXJ0OiBmYWxzZSwKICAgICAgaW1nQWxlcnQ6IGZhbHNlLAogICAgICBwYXR0VXJsOiAiIgogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIC8vIG1vZGVsLAogICAgLy8gZ2VuZXJhdG9yLAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TW9kZWwobW9kZWxMaXN0KSB7CiAgICAgIHJldHVybiBtb2RlbExpc3Q7CiAgICB9LAogICAgdGl0bGVDaGsoKSB7CiAgICAgIGlmICh0aGlzLnRpdGxlID09ICIiKSB7CiAgICAgICAgdGhpcy50aXRsZUFsZXJ0ID0gdHJ1ZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRpdGxlQWxlcnQgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIGltZ0NoayhtYXJrZXIpIHsKICAgICAgLy8gdGhpcy5vcmlnaW5hbCA9PSB0cnVlICYmIOeUu+WDj+OBjOOBquOBhAogICAgICBpZiAodGhpcy5vcmlnaW5hbCA9PSB0cnVlICYmIG1hcmtlciA9PSB0aGlzLiRzdG9yZS5zdGF0ZS5kZWZhdWx0TWFya2VyKSB7CiAgICAgICAgdGhpcy5pbWdBbGVydCA9IHRydWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pbWdBbGVydCA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgZ2V0TW9kZWxMaXN0T2ZQb3N0RGF0YSgpIHsKICAgICAgY29uc3QgcmVmcyA9IHRoaXMuJHJlZnM7CiAgICAgIHRoaXMubW9kZWxMaXN0ID0gcmVmcy5tb2RlbC5jcmVhdGVNb2RlbCgpOwogICAgICBjb25zb2xlLmxvZyh0aGlzLm1vZGVsTGlzdCk7CiAgICB9LAogICAgZ2V0UGF0dE9mUG9zdERhdGEoKSB7CiAgICAgIGlmICh0aGlzLnRpdGxlQ2hrKCkpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IHJlZnMgPSB0aGlzLiRyZWZzOwogICAgICB0aGlzLm1vZGVsTGlzdCA9IHJlZnMubW9kZWwuY3JlYXRlTW9kZWwoKTsKCiAgICAgIGlmICh0aGlzLm9yaWdpbmFsID09IHRydWUpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLmdlbmVyYXRvcik7CiAgICAgICAgcmVmcy5nZW5lcmF0b3IuZ2V0UGF0dCgpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucG9zdEFyKG51bGwpOwogICAgICB9CiAgICB9LAogICAgY3JlYXRlUXJDb2RlKGtleSkgewogICAgICByZXR1cm4gYGh0dHBzOi8vY2hhcnQuYXBpcy5nb29nbGUuY29tL2NoYXJ0P2Nocz0zMDB4MzAwJmNodD1xciZjaGw9aHR0cHM6Ly93ZWItYXItY2hhbmdlLWFyLXBhZ2UuZmlyZWJhc2VhcHAuY29tLz9xPSR7a2V5fWA7CiAgICB9LAogICAgTm9kZVRvSHRtbChub2RlKSB7CiAgICAgIGlmICghbm9kZSB8fCAhQXJyYXkuaXNBcnJheShub2RlKSkgcmV0dXJuOwoKICAgICAgdmFyIHRtcEVsbXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgdmFyIGkgPSAwOwogICAgICB2YXIgbGVuID0gMDsKICAgICAgdmFyIG5vZGVzID0gW107CgogICAgICAvLyDpq5jpgJ/lh6bnkIbjgZnjgovjgYzlr77lv5zjg5bjg6njgqbjgrbjgpLogIPjgYhpbm5lckhUTUzjgpLkvb/nlKgKICAgICAgLy8gdG1wRWxtdC5pbm5lckhUTUwgPSBodG1sU3RyOwogICAgICAvLyB0bXBFbG10Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgaHRtbFN0cik7CgogICAgICByZXR1cm4gdG1wRWxtdC5jaGlsZE5vZGVzOwogICAgfSwKICAgIHVwbG9hZFBhdHQoYmxvYiwgZmlsZU5hbWUpIHsKICAgICAgLy8gQ3JlYXRlIGEgcm9vdCByZWZlcmVuY2UKICAgICAgdmFyIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCk7CgogICAgICAvLyBDcmVhdGUgYSByZWZlcmVuY2UgdG8gJ2ltYWdlcy9tb3VudGFpbnMuanBnJwogICAgICB2YXIgbW91bnRhaW5JbWFnZXNSZWYgPSBzdG9yYWdlUmVmLmNoaWxkKGBwYXR0LyR7ZmlsZU5hbWV9LnBhdHRgKTsKCiAgICAgIGlmIChibG9iKSB7CiAgICAgICAgY29uc29sZS5sb2coImZpbGUiKTsKICAgICAgICBjb25zb2xlLmxvZyhibG9iKTsKCiAgICAgICAgbW91bnRhaW5JbWFnZXNSZWYucHV0KGJsb2IpLnRoZW4oZnVuY3Rpb24oc25hcHNob3QpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJVcGxvYWRlZCBhIGJsb2IiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKHNuYXBzaG90KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHBvc3RBcihibG9iKSB7CiAgICAgIC8vIEdldCBhIGtleSBmb3IgYSBuZXcgUG9zdC4KICAgICAgdmFyIG5ld1Bvc3RLZXkgPSBmaXJlYmFzZQogICAgICAgIC5kYXRhYmFzZSgpCiAgICAgICAgLnJlZigpCiAgICAgICAgLmNoaWxkKCJwb3N0cyIpCiAgICAgICAgLnB1c2goKS5rZXk7CgogICAgICAvLyBBIHBvc3QgZW50cnkuCiAgICAgIHZhciBwb3N0RGF0YSA9IHt9OwogICAgICBpZiAodGhpcy5vcmlnaW5hbCkgewogICAgICAgIGNvbnN0IHJlZnMgPSB0aGlzLiRyZWZzOwogICAgICAgIHZhciBtYXJrZXIgPSByZWZzLmdlbmVyYXRvci5nZXRNYXJrZXIoKTsKICAgICAgICBpZiAodGhpcy5pbWdDaGsobWFya2VyKSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZygiYmxvYiBieSAkZW1pdCIpOwogICAgICAgIGNvbnNvbGUubG9nKGJsb2IpOwogICAgICAgIHRoaXMudXBsb2FkUGF0dChibG9iLCBuZXdQb3N0S2V5KTsKCiAgICAgICAgcG9zdERhdGEgPSB7CiAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICAgIG1hcmtlcjogbWFya2VyLAogICAgICAgICAgcXI6IHRoaXMuY3JlYXRlUXJDb2RlKG5ld1Bvc3RLZXkpLAogICAgICAgICAgbW9kZWw6IHRoaXMubW9kZWxMaXN0LAogICAgICAgICAgb3JpZ2luYWw6IHRoaXMub3JpZ2luYWwKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIHBvc3REYXRhID0gewogICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICBxcjogdGhpcy5jcmVhdGVRckNvZGUobmV3UG9zdEtleSksCiAgICAgICAgICBtb2RlbDogdGhpcy5tb2RlbExpc3QsCiAgICAgICAgICBvcmlnaW5hbDogdGhpcy5vcmlnaW5hbAogICAgICAgIH07CiAgICAgIH0KCiAgICAgIC8vIFdyaXRlIHRoZSBuZXcgcG9zdCdzIGRhdGEgc2ltdWx0YW5lb3VzbHkgaW4gdGhlIHBvc3RzIGxpc3QgYW5kIHRoZSB1c2VyJ3MgcG9zdCBsaXN0LgogICAgICB2YXIgdXBkYXRlcyA9IHt9OwogICAgICB1cGRhdGVzWyIvZGF0YS8iICsgbmV3UG9zdEtleV0gPSBwb3N0RGF0YTsKCiAgICAgIGNvbnNvbGUubG9nKCJwb3N0OiIsIHBvc3REYXRhKTsKCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvbGlzdCIpOwogICAgICByZXR1cm4gZmlyZWJhc2UKICAgICAgICAuZGF0YWJhc2UoKQogICAgICAgIC5yZWYoKQogICAgICAgIC51cGRhdGUodXBkYXRlcyk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/create","sourcesContent":["<template>\n  <div id=\"create\">\n    <h2>作成する</h2>\n    <div id=\"params\">\n      <div class=\"title\">\n        <h3>タイトル</h3>\n        <input placeholder=\"タイトル\" v-model=\"title\" />\n      </div>\n      <div id=\"createdModel\">\n        <h3>モデル</h3>\n        <!-- <model ref=\"model\"></model> -->\n      </div>\n\n      <div class=\"marker\">\n        <h3>マーカー</h3>\n        <div id=\"switch\">\n          <div v-if=\"original\">オリジナルマーカーを使う</div>\n          <div v-else>デフォルトマーカーを使う</div>\n          <select\n            class=\"switch\"\n            v-model=\"original\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#ff4949\"\n            name=\"original\"\n            id=\"original\"\n          >\n            <option value=\"false\" for=\"original\">false</option>\n            <option value=\"true\" for=\"original\">true</option>\n          </select>\n        </div>\n        <div id=\"markerArea\">\n          <generator v-if=\"original\" ref=\"generator\" @blob=\"postAr\"></generator>\n          <img v-else id=\"hiro\" :src=\"hiro\" :alt=\"hiro\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"alert\" v-if=\"titleAlert\" title=\"タイトルを入力してください\" type=\"error\" :closable=\"false\"></div>\n    <div class=\"alert\" v-if=\"imgAlert\" title=\"画像をアップロードしてください\" type=\"error\" :closable=\"false\"></div>\n    <div id=\"create-buttons\">\n      <button type=\"danger\" @click=\"getPattOfPostData\">作成</button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n// import model from \"@/view/model.vue\";\nimport generator from \"@/view/markerTraining/examples/generator.vue\";\nimport firebase from \"firebase\";\n\nexport default {\n  data() {\n    return {\n      title: \"\",\n      models: [],\n      modelList: [],\n      original: false,\n      // hiro: require(\"@/assets/img/HIRO.jpg\"),\n      titleAlert: false,\n      imgAlert: false,\n      pattUrl: \"\"\n    };\n  },\n  components: {\n    // model,\n    // generator,\n  },\n  methods: {\n    getModel(modelList) {\n      return modelList;\n    },\n    titleChk() {\n      if (this.title == \"\") {\n        this.titleAlert = true;\n        return true;\n      } else {\n        this.titleAlert = false;\n      }\n    },\n    imgChk(marker) {\n      // this.original == true && 画像がない\n      if (this.original == true && marker == this.$store.state.defaultMarker) {\n        this.imgAlert = true;\n        return true;\n      } else {\n        this.imgAlert = false;\n      }\n    },\n    getModelListOfPostData() {\n      const refs = this.$refs;\n      this.modelList = refs.model.createModel();\n      console.log(this.modelList);\n    },\n    getPattOfPostData() {\n      if (this.titleChk()) {\n        return;\n      }\n\n      const refs = this.$refs;\n      this.modelList = refs.model.createModel();\n\n      if (this.original == true) {\n        console.log(this.$refs.generator);\n        refs.generator.getPatt();\n      } else {\n        this.postAr(null);\n      }\n    },\n    createQrCode(key) {\n      return `https://chart.apis.google.com/chart?chs=300x300&cht=qr&chl=https://web-ar-change-ar-page.firebaseapp.com/?q=${key}`;\n    },\n    NodeToHtml(node) {\n      if (!node || !Array.isArray(node)) return;\n\n      var tmpElmt = document.createElement(\"div\");\n      var i = 0;\n      var len = 0;\n      var nodes = [];\n\n      // 高速処理するが対応ブラウザを考えinnerHTMLを使用\n      // tmpElmt.innerHTML = htmlStr;\n      // tmpElmt.insertAdjacentHTML('beforeend', htmlStr);\n\n      return tmpElmt.childNodes;\n    },\n    uploadPatt(blob, fileName) {\n      // Create a root reference\n      var storageRef = firebase.storage().ref();\n\n      // Create a reference to 'images/mountains.jpg'\n      var mountainImagesRef = storageRef.child(`patt/${fileName}.patt`);\n\n      if (blob) {\n        console.log(\"file\");\n        console.log(blob);\n\n        mountainImagesRef.put(blob).then(function(snapshot) {\n          console.log(\"Uploaded a blob\");\n          console.log(snapshot);\n        });\n      }\n    },\n    postAr(blob) {\n      // Get a key for a new Post.\n      var newPostKey = firebase\n        .database()\n        .ref()\n        .child(\"posts\")\n        .push().key;\n\n      // A post entry.\n      var postData = {};\n      if (this.original) {\n        const refs = this.$refs;\n        var marker = refs.generator.getMarker();\n        if (this.imgChk(marker)) {\n          return;\n        }\n        console.log(\"blob by $emit\");\n        console.log(blob);\n        this.uploadPatt(blob, newPostKey);\n\n        postData = {\n          title: this.title,\n          marker: marker,\n          qr: this.createQrCode(newPostKey),\n          model: this.modelList,\n          original: this.original\n        };\n      } else {\n        postData = {\n          title: this.title,\n          qr: this.createQrCode(newPostKey),\n          model: this.modelList,\n          original: this.original\n        };\n      }\n\n      // Write the new post's data simultaneously in the posts list and the user's post list.\n      var updates = {};\n      updates[\"/data/\" + newPostKey] = postData;\n\n      console.log(\"post:\", postData);\n\n      this.$router.push(\"/list\");\n      return firebase\n        .database()\n        .ref()\n        .update(updates);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#create {\n  #params {\n    width: 100%;\n    div {\n      margin: 0 auto 15px 0;\n\n      h3 {\n        padding: 10px 0 5px 0;\n        margin: 0;\n      }\n\n      input {\n        width: 80%;\n      }\n    }\n\n    .marker {\n      #switch {\n        display: flex;\n        div {\n          font-size: 1rem;\n          vertical-align: 0;\n          margin-right: 15px;\n        }\n\n        .switch {\n          margin-left: 0;\n        }\n      }\n\n      #markerArea {\n        #hiro {\n          max-height: 300px;\n        }\n      }\n    }\n  }\n\n  a-scene {\n    display: block;\n    width: 300px;\n    height: 300px;\n    background: #c3c3c3;\n  }\n\n  #create-buttons {\n    text-align: center;\n    margin: 10px 0 50px 0;\n  }\n\n  .alert {\n    margin: 0 0 10px 0;\n  }\n}\n</style>\n"]}]}