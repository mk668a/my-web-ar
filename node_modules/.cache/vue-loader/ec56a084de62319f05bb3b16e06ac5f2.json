{"remainingRequest":"/Users/mk/Desktop/webar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mk/Desktop/webar/src/views/create/generator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mk/Desktop/webar/src/views/create/generator.vue","mtime":1574694489815},{"path":"/Users/mk/Desktop/webar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["generator.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generator.vue","sourceRoot":"src/views/create","sourcesContent":["<template>\n  <div class=\"markerTraining\"></div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  data() {\n    return {\n      innerImageURL: \"inner-images/inner-arjs.png\",\n      fullMarkerURL: null,\n      imageName: null\n    };\n  },\n  methods: {\n    createPatternFileString() {\n      var image = new Image();\n      // copy image on canvas\n      var canvas = document.createElement(\"canvas\");\n      var context = canvas.getContext(\"2d\");\n      canvas.width = 16;\n      canvas.height = 16;\n\n      // document.body.appendChild(canvas)\n      // canvas.style.width = '200px'\n\n      var patternFileString = \"\";\n      for (\n        var orientation = 0;\n        orientation > -2 * Math.PI;\n        orientation -= Math.PI / 2\n      ) {\n        // draw on canvas - honor orientation\n        context.save();\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.translate(canvas.width / 2, canvas.height / 2);\n        context.rotate(orientation);\n        context.drawImage(\n          image,\n          -canvas.width / 2,\n          -canvas.height / 2,\n          canvas.width,\n          canvas.height\n        );\n        context.restore();\n\n        // get imageData\n        var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        // generate the patternFileString for this orientation\n        if (orientation !== 0) patternFileString += \"\\n\";\n        // NOTE bgr order and not rgb!!! so from 2 to 0\n        for (var channelOffset = 2; channelOffset >= 0; channelOffset--) {\n          // console.log('channelOffset', channelOffset)\n          for (var y = 0; y < imageData.height; y++) {\n            for (var x = 0; x < imageData.width; x++) {\n              if (x !== 0) patternFileString += \" \";\n\n              var offset = y * imageData.width * 4 + x * 4 + channelOffset;\n              var value = imageData.data[offset];\n\n              patternFileString += String(value).padStart(3);\n            }\n            patternFileString += \"\\n\";\n          }\n        }\n      }\n\n      return patternFileString;\n    },\n    getPatt() {\n      const self = this;\n      if (self.innerImageURL === null) {\n        alert(\"upload a file first\");\n        return;\n      }\n      console.assert(self.innerImageURL);\n      THREEx.ArPatternFile.encodeImageURL(\n        self.innerImageURL,\n        function onComplete(patternFileString) {\n          self.fileName = \"pattern-\" + (self.imageName || \"marker\") + \".patt\";\n          // tech from https://stackoverflow.com/questions/3665115/create-a-file-in-memory-for-user-to-download-not-through-server\n          // var domElement = window.document.createElement(\"a\");\n          // domElement.href = window.URL.createObjectURL(\n          //   new Blob([patternFileString], { type: \"text/plain\" })\n          // );\n          // domElement.download = self.fileName;\n          // document.body.appendChild(domElement);\n          // domElement.click();\n\n          // stateにパターンのダウンロードURLをセット\n          var blob = new Blob([patternFileString], { type: \"text/plain\" });\n          console.log(\"getPatt\");\n          // console.log(domElement.href);\n          self.$emit(\"blob\", blob);\n\n          // document.body.removeChild(domElement);\n        }\n      );\n    },\n    getMarker() {\n      const self = this;\n      // debugger\n      if (self.innerImageURL === null) {\n        alert(\"upload a file first\");\n        return;\n      }\n      // tech from https://stackoverflow.com/questions/3665115/create-a-file-in-memory-for-user-to-download-not-through-server\n      var domElement = window.document.createElement(\"a\");\n      domElement.href = this.fullMarkerURL;\n      // set fileName\n      domElement.download = \"pattern-\" + (self.imageName || \"marker\") + \".png\";\n\n      document.body.appendChild(domElement);\n\n      // クリックイベントでダウンロード\n      // domElement.click();\n      //\n      console.log(\"getMarker\");\n\n      document.body.removeChild(domElement);\n\n      return domElement.getAttribute(\"href\");\n    }\n  },\n  mounted() {\n    const self = this;\n\n    // var innerImageURL = null;\n    var fullMarkerURL = null;\n    // var imageName = null;\n    self.innerImageURL = \"inner-images/inner-arjs.png\";\n    updateFullMarkerImage();\n    document.querySelector(\"#buttonDownloadEncoded\");\n\n    document.querySelector(\"#buttonDownloadFullImage\");\n\n    document\n      .querySelector(\"#patternRatioSlider\")\n      .addEventListener(\"input\", function() {\n        // update the patternRatio number\n        var patternRatio =\n          document.querySelector(\"#patternRatioSlider\").value / 100;\n        var domElement = document.querySelector(\n          \"[for=patternRatioSlider] span\"\n        );\n        domElement.innerHTML = `パターン比率 ${patternRatio.toFixed(2)}`;\n        // update fullMarkerImage\n        updateFullMarkerImage();\n      });\n    document.querySelector(\"#imageSize\").addEventListener(\"input\", function() {\n      // update the patternRatio number\n      var imageSize = document.querySelector(\"#imageSize\").value;\n      var domElement = document.querySelector(\"[for=imageSize] span\");\n      domElement.innerHTML = `画像サイズ ${imageSize}px`;\n      // update fullMarkerImage\n      updateFullMarkerImage();\n    });\n    document\n      .querySelector(\"#borderColor\")\n      .addEventListener(\"input\", function() {\n        var imageSize = document.querySelector(\"#borderColor\").value;\n        var domElement = document.querySelector(\"[for=borderColor] span\");\n        // update fullMarkerImage\n        updateFullMarkerImage();\n      });\n    document.querySelector(\"#fileinput\").addEventListener(\"change\", function() {\n      var file = this.files[0];\n      self.imageName = file.name;\n      // remove file extension\n      self.imageName =\n        self.imageName.substring(0, self.imageName.lastIndexOf(\".\")) ||\n        self.imageName;\n      // debugger\n      var reader = new FileReader();\n      reader.onload = function(event) {\n        self.innerImageURL = event.target.result;\n        updateFullMarkerImage();\n      };\n      reader.readAsDataURL(file);\n    });\n\n    function updateFullMarkerImage() {\n      // get patternRatio\n      var patternRatio =\n        document.querySelector(\"#patternRatioSlider\").value / 100;\n      var imageSize = document.querySelector(\"#imageSize\").value;\n      var borderColor = document.querySelector(\"#borderColor\").value;\n      function hexaColor(color) {\n        return /^#[0-9A-F]{6}$/i.test(color);\n      }\n      var s = new Option().style;\n      s.color = borderColor;\n      if (\n        borderColor === \"\" ||\n        (s.color != borderColor && !hexaColor(borderColor))\n      ) {\n        // if color not valid, use black\n        borderColor = \"black\";\n      }\n      THREEx.ArPatternFile.buildFullMarker(\n        self.innerImageURL,\n        patternRatio,\n        imageSize,\n        borderColor,\n        function onComplete(markerUrl) {\n          fullMarkerURL = markerUrl;\n          var fullMarkerImage = document.createElement(\"img\");\n          fullMarkerImage.src = fullMarkerURL;\n          self.fullMarkerURL = fullMarkerURL;\n          // put fullMarkerImage into #imageContainer\n          var container = document.querySelector(\"#imageContainer\");\n          while (container.firstChild)\n            container.removeChild(container.firstChild);\n          container.appendChild(fullMarkerImage);\n        }\n      );\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.markerTraining {\n  display: flex;\n\n  .mdl-grid {\n    .mdl-cell {\n      * {\n        margin-bottom: 15px;\n      }\n\n      label {\n        display: block;\n        cursor: pointer;\n\n        * {\n          cursor: pointer;\n        }\n\n        input {\n          display: block;\n        }\n      }\n\n      .mdl-tooltip {\n        display: none;\n      }\n\n      #buttonUpload {\n        border: 1px solid black;\n        border-radius: 5px;\n        padding: 10px;\n      }\n    }\n  }\n\n  #marker {\n    width: 40%;\n    margin: 0 !important;\n  }\n\n  // h1 {\n  //   text-align: center;\n  //   font-size: 500%;\n  // }\n\n  // div.mdl-cell {\n  //   text-align: center;\n  // }\n\n  // h1 a {\n  //   text-decoration: none;\n  // }\n\n  // h1 a:hover {\n  //   text-decoration: underline;\n  // }\n\n  #imageContainer img {\n    width: 100%;\n    max-width: 512px;\n  }\n}\n</style>"]}]}