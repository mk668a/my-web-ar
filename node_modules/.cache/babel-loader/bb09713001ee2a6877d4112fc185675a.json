{"remainingRequest":"/Users/mk/Desktop/git/my-web-ar/node_modules/babel-loader/lib/index.js!/Users/mk/Desktop/git/my-web-ar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mk/Desktop/git/my-web-ar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mk/Desktop/git/my-web-ar/src/views/create/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mk/Desktop/git/my-web-ar/src/views/create/index.vue","mtime":1574694768923},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/git/my-web-ar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gaW1wb3J0IG1vZGVsIGZyb20gIkAvdmlldy9tb2RlbC52dWUiOwppbXBvcnQgZ2VuZXJhdG9yIGZyb20gIkAvdmlld3MvY3JlYXRlL2dlbmVyYXRvci52dWUiOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlOiAiIiwKICAgICAgbW9kZWxzOiBbXSwKICAgICAgbW9kZWxMaXN0OiBbXSwKICAgICAgb3JpZ2luYWw6IGZhbHNlLAogICAgICBoaXJvOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvSElSTy5qcGciKSwKICAgICAgdGl0bGVBbGVydDogZmFsc2UsCiAgICAgIGltZ0FsZXJ0OiBmYWxzZSwKICAgICAgcGF0dFVybDogIiIKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAvLyBtb2RlbCwKICAgIGdlbmVyYXRvcjogZ2VuZXJhdG9yCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRNb2RlbDogZnVuY3Rpb24gZ2V0TW9kZWwobW9kZWxMaXN0KSB7CiAgICAgIHJldHVybiBtb2RlbExpc3Q7CiAgICB9LAogICAgdGl0bGVDaGs6IGZ1bmN0aW9uIHRpdGxlQ2hrKCkgewogICAgICBpZiAodGhpcy50aXRsZSA9PSAiIikgewogICAgICAgIHRoaXMudGl0bGVBbGVydCA9IHRydWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50aXRsZUFsZXJ0ID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBpbWdDaGs6IGZ1bmN0aW9uIGltZ0NoayhtYXJrZXIpIHsKICAgICAgLy8gdGhpcy5vcmlnaW5hbCA9PSB0cnVlICYmIOeUu+WDj+OBjOOBquOBhAogICAgICBpZiAodGhpcy5vcmlnaW5hbCA9PSB0cnVlICYmIG1hcmtlciA9PSB0aGlzLiRzdG9yZS5zdGF0ZS5kZWZhdWx0TWFya2VyKSB7CiAgICAgICAgdGhpcy5pbWdBbGVydCA9IHRydWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pbWdBbGVydCA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgZ2V0TW9kZWxMaXN0T2ZQb3N0RGF0YTogZnVuY3Rpb24gZ2V0TW9kZWxMaXN0T2ZQb3N0RGF0YSgpIHsKICAgICAgdmFyIHJlZnMgPSB0aGlzLiRyZWZzOwogICAgICB0aGlzLm1vZGVsTGlzdCA9IHJlZnMubW9kZWwuY3JlYXRlTW9kZWwoKTsKICAgICAgY29uc29sZS5sb2codGhpcy5tb2RlbExpc3QpOwogICAgfSwKICAgIGdldFBhdHRPZlBvc3REYXRhOiBmdW5jdGlvbiBnZXRQYXR0T2ZQb3N0RGF0YSgpIHsKICAgICAgaWYgKHRoaXMudGl0bGVDaGsoKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHJlZnMgPSB0aGlzLiRyZWZzOwogICAgICB0aGlzLm1vZGVsTGlzdCA9IHJlZnMubW9kZWwuY3JlYXRlTW9kZWwoKTsKCiAgICAgIGlmICh0aGlzLm9yaWdpbmFsID09IHRydWUpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLmdlbmVyYXRvcik7CiAgICAgICAgcmVmcy5nZW5lcmF0b3IuZ2V0UGF0dCgpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucG9zdEFyKG51bGwpOwogICAgICB9CiAgICB9LAogICAgY3JlYXRlUXJDb2RlOiBmdW5jdGlvbiBjcmVhdGVRckNvZGUoa2V5KSB7CiAgICAgIHJldHVybiAiaHR0cHM6Ly9jaGFydC5hcGlzLmdvb2dsZS5jb20vY2hhcnQ/Y2hzPTMwMHgzMDAmY2h0PXFyJmNobD1odHRwczovL3dlYi1hci1jaGFuZ2UtYXItcGFnZS5maXJlYmFzZWFwcC5jb20vP3E9Ii5jb25jYXQoa2V5KTsKICAgIH0sCiAgICBOb2RlVG9IdG1sOiBmdW5jdGlvbiBOb2RlVG9IdG1sKG5vZGUpIHsKICAgICAgaWYgKCFub2RlIHx8ICFBcnJheS5pc0FycmF5KG5vZGUpKSByZXR1cm47CiAgICAgIHZhciB0bXBFbG10ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgIHZhciBpID0gMDsKICAgICAgdmFyIGxlbiA9IDA7CiAgICAgIHZhciBub2RlcyA9IFtdOyAvLyDpq5jpgJ/lh6bnkIbjgZnjgovjgYzlr77lv5zjg5bjg6njgqbjgrbjgpLogIPjgYhpbm5lckhUTUzjgpLkvb/nlKgKICAgICAgLy8gdG1wRWxtdC5pbm5lckhUTUwgPSBodG1sU3RyOwogICAgICAvLyB0bXBFbG10Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgaHRtbFN0cik7CgogICAgICByZXR1cm4gdG1wRWxtdC5jaGlsZE5vZGVzOwogICAgfSwKICAgIHVwbG9hZFBhdHQ6IGZ1bmN0aW9uIHVwbG9hZFBhdHQoYmxvYiwgZmlsZU5hbWUpIHsKICAgICAgLy8gQ3JlYXRlIGEgcm9vdCByZWZlcmVuY2UKICAgICAgdmFyIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCk7IC8vIENyZWF0ZSBhIHJlZmVyZW5jZSB0byAnaW1hZ2VzL21vdW50YWlucy5qcGcnCgogICAgICB2YXIgbW91bnRhaW5JbWFnZXNSZWYgPSBzdG9yYWdlUmVmLmNoaWxkKCJwYXR0LyIuY29uY2F0KGZpbGVOYW1lLCAiLnBhdHQiKSk7CgogICAgICBpZiAoYmxvYikgewogICAgICAgIGNvbnNvbGUubG9nKCJmaWxlIik7CiAgICAgICAgY29uc29sZS5sb2coYmxvYik7CiAgICAgICAgbW91bnRhaW5JbWFnZXNSZWYucHV0KGJsb2IpLnRoZW4oZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiVXBsb2FkZWQgYSBibG9iIik7CiAgICAgICAgICBjb25zb2xlLmxvZyhzbmFwc2hvdCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBwb3N0QXI6IGZ1bmN0aW9uIHBvc3RBcihibG9iKSB7CiAgICAgIC8vIEdldCBhIGtleSBmb3IgYSBuZXcgUG9zdC4KICAgICAgdmFyIG5ld1Bvc3RLZXkgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigpLmNoaWxkKCJwb3N0cyIpLnB1c2goKS5rZXk7IC8vIEEgcG9zdCBlbnRyeS4KCiAgICAgIHZhciBwb3N0RGF0YSA9IHt9OwoKICAgICAgaWYgKHRoaXMub3JpZ2luYWwpIHsKICAgICAgICB2YXIgcmVmcyA9IHRoaXMuJHJlZnM7CiAgICAgICAgdmFyIG1hcmtlciA9IHJlZnMuZ2VuZXJhdG9yLmdldE1hcmtlcigpOwoKICAgICAgICBpZiAodGhpcy5pbWdDaGsobWFya2VyKSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coImJsb2IgYnkgJGVtaXQiKTsKICAgICAgICBjb25zb2xlLmxvZyhibG9iKTsKICAgICAgICB0aGlzLnVwbG9hZFBhdHQoYmxvYiwgbmV3UG9zdEtleSk7CiAgICAgICAgcG9zdERhdGEgPSB7CiAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICAgIG1hcmtlcjogbWFya2VyLAogICAgICAgICAgcXI6IHRoaXMuY3JlYXRlUXJDb2RlKG5ld1Bvc3RLZXkpLAogICAgICAgICAgbW9kZWw6IHRoaXMubW9kZWxMaXN0LAogICAgICAgICAgb3JpZ2luYWw6IHRoaXMub3JpZ2luYWwKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIHBvc3REYXRhID0gewogICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICBxcjogdGhpcy5jcmVhdGVRckNvZGUobmV3UG9zdEtleSksCiAgICAgICAgICBtb2RlbDogdGhpcy5tb2RlbExpc3QsCiAgICAgICAgICBvcmlnaW5hbDogdGhpcy5vcmlnaW5hbAogICAgICAgIH07CiAgICAgIH0gLy8gV3JpdGUgdGhlIG5ldyBwb3N0J3MgZGF0YSBzaW11bHRhbmVvdXNseSBpbiB0aGUgcG9zdHMgbGlzdCBhbmQgdGhlIHVzZXIncyBwb3N0IGxpc3QuCgoKICAgICAgdmFyIHVwZGF0ZXMgPSB7fTsKICAgICAgdXBkYXRlc1siL2RhdGEvIiArIG5ld1Bvc3RLZXldID0gcG9zdERhdGE7CiAgICAgIGNvbnNvbGUubG9nKCJwb3N0OiIsIHBvc3REYXRhKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9saXN0Iik7CiAgICAgIHJldHVybiBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigpLnVwZGF0ZSh1cGRhdGVzKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"create\">\n    <h2>作成する</h2>\n    <div id=\"params\">\n      <div class=\"title\">\n        <h3>タイトル</h3>\n        <input placeholder=\"タイトル\" v-model=\"title\" />\n      </div>\n      <div id=\"createdModel\">\n        <h3>モデル</h3>\n        <!-- <model ref=\"model\"></model> -->\n      </div>\n\n      <div class=\"marker\">\n        <h3>マーカー</h3>\n        <div id=\"switch\">\n          <div v-if=\"original\">オリジナルマーカーを使う</div>\n          <div v-else>デフォルトマーカーを使う</div>\n          <select class=\"switch\" v-model=\"original\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\n            <option :value=\"false\">false</option>\n            <option :value=\"true\">true</option>\n          </select>\n        </div>\n        <div id=\"markerArea\">\n          <generator v-if=\"original\" ref=\"generator\" @blob=\"postAr\"></generator>\n          <img v-else id=\"hiro\" :src=\"hiro\" :alt=\"hiro\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"alert\" v-if=\"titleAlert\" title=\"タイトルを入力してください\" type=\"error\" :closable=\"false\"></div>\n    <div class=\"alert\" v-if=\"imgAlert\" title=\"画像をアップロードしてください\" type=\"error\" :closable=\"false\"></div>\n    <div id=\"create-buttons\">\n      <button type=\"danger\" @click=\"getPattOfPostData\">作成</button>\n    </div>\n  </div>\n</template>\n\n<script>\n// import model from \"@/view/model.vue\";\nimport generator from \"@/views/create/generator.vue\";\nimport firebase from \"firebase\";\n\nexport default {\n  data() {\n    return {\n      title: \"\",\n      models: [],\n      modelList: [],\n      original: false,\n      hiro: require(\"@/assets/img/HIRO.jpg\"),\n      titleAlert: false,\n      imgAlert: false,\n      pattUrl: \"\"\n    };\n  },\n  components: {\n    // model,\n    generator\n  },\n  methods: {\n    getModel(modelList) {\n      return modelList;\n    },\n    titleChk() {\n      if (this.title == \"\") {\n        this.titleAlert = true;\n        return true;\n      } else {\n        this.titleAlert = false;\n      }\n    },\n    imgChk(marker) {\n      // this.original == true && 画像がない\n      if (this.original == true && marker == this.$store.state.defaultMarker) {\n        this.imgAlert = true;\n        return true;\n      } else {\n        this.imgAlert = false;\n      }\n    },\n    getModelListOfPostData() {\n      const refs = this.$refs;\n      this.modelList = refs.model.createModel();\n      console.log(this.modelList);\n    },\n    getPattOfPostData() {\n      if (this.titleChk()) {\n        return;\n      }\n\n      const refs = this.$refs;\n      this.modelList = refs.model.createModel();\n\n      if (this.original == true) {\n        console.log(this.$refs.generator);\n        refs.generator.getPatt();\n      } else {\n        this.postAr(null);\n      }\n    },\n    createQrCode(key) {\n      return `https://chart.apis.google.com/chart?chs=300x300&cht=qr&chl=https://web-ar-change-ar-page.firebaseapp.com/?q=${key}`;\n    },\n    NodeToHtml(node) {\n      if (!node || !Array.isArray(node)) return;\n\n      var tmpElmt = document.createElement(\"div\");\n      var i = 0;\n      var len = 0;\n      var nodes = [];\n\n      // 高速処理するが対応ブラウザを考えinnerHTMLを使用\n      // tmpElmt.innerHTML = htmlStr;\n      // tmpElmt.insertAdjacentHTML('beforeend', htmlStr);\n\n      return tmpElmt.childNodes;\n    },\n    uploadPatt(blob, fileName) {\n      // Create a root reference\n      var storageRef = firebase.storage().ref();\n\n      // Create a reference to 'images/mountains.jpg'\n      var mountainImagesRef = storageRef.child(`patt/${fileName}.patt`);\n\n      if (blob) {\n        console.log(\"file\");\n        console.log(blob);\n\n        mountainImagesRef.put(blob).then(function(snapshot) {\n          console.log(\"Uploaded a blob\");\n          console.log(snapshot);\n        });\n      }\n    },\n    postAr(blob) {\n      // Get a key for a new Post.\n      var newPostKey = firebase\n        .database()\n        .ref()\n        .child(\"posts\")\n        .push().key;\n\n      // A post entry.\n      var postData = {};\n      if (this.original) {\n        const refs = this.$refs;\n        var marker = refs.generator.getMarker();\n        if (this.imgChk(marker)) {\n          return;\n        }\n        console.log(\"blob by $emit\");\n        console.log(blob);\n        this.uploadPatt(blob, newPostKey);\n\n        postData = {\n          title: this.title,\n          marker: marker,\n          qr: this.createQrCode(newPostKey),\n          model: this.modelList,\n          original: this.original\n        };\n      } else {\n        postData = {\n          title: this.title,\n          qr: this.createQrCode(newPostKey),\n          model: this.modelList,\n          original: this.original\n        };\n      }\n\n      // Write the new post's data simultaneously in the posts list and the user's post list.\n      var updates = {};\n      updates[\"/data/\" + newPostKey] = postData;\n\n      console.log(\"post:\", postData);\n\n      this.$router.push(\"/list\");\n      return firebase\n        .database()\n        .ref()\n        .update(updates);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#create {\n  #params {\n    width: 100%;\n    div {\n      margin: 0 auto 15px 0;\n\n      h3 {\n        padding: 10px 0 5px 0;\n        margin: 0;\n      }\n\n      input {\n        width: 80%;\n      }\n    }\n\n    .marker {\n      #switch {\n        display: flex;\n        div {\n          font-size: 1rem;\n          vertical-align: 0;\n          margin-right: 15px;\n        }\n\n        .switch {\n          margin-left: 0;\n        }\n      }\n\n      #markerArea {\n        #hiro {\n          max-height: 300px;\n        }\n      }\n    }\n  }\n\n  a-scene {\n    display: block;\n    width: 300px;\n    height: 300px;\n    background: #c3c3c3;\n  }\n\n  #create-buttons {\n    text-align: center;\n    margin: 10px 0 50px 0;\n  }\n\n  .alert {\n    margin: 0 0 10px 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/create"}]}