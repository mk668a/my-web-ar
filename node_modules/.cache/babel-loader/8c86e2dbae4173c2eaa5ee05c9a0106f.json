{"remainingRequest":"/Users/mk/Desktop/webar/node_modules/babel-loader/lib/index.js!/Users/mk/Desktop/webar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mk/Desktop/webar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mk/Desktop/webar/src/views/create/generator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mk/Desktop/webar/src/views/create/generator.vue","mtime":1574694489815},{"path":"/Users/mk/Desktop/webar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mk/Desktop/webar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["generator.vue"],"names":[],"mappings":";;;;;;;;AAKA,OAAA,QAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,6BADA;AAEA,MAAA,aAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,uBADA,qCACA;AACA,UAAA,KAAA,GAAA,IAAA,KAAA,EAAA,CADA,CAEA;;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,EAAA,CANA,CAQA;AACA;;AAEA,UAAA,iBAAA,GAAA,EAAA;;AACA,WACA,IAAA,WAAA,GAAA,CADA,EAEA,WAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,EAFA,EAGA,WAAA,IAAA,IAAA,CAAA,EAAA,GAAA,CAHA,EAIA;AACA;AACA,QAAA,OAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,KAAA,GAAA,CAAA,EAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,QAAA,OAAA,CAAA,MAAA,CAAA,WAAA;AACA,QAAA,OAAA,CAAA,SAAA,CACA,KADA,EAEA,CAAA,MAAA,CAAA,KAAA,GAAA,CAFA,EAGA,CAAA,MAAA,CAAA,MAAA,GAAA,CAHA,EAIA,MAAA,CAAA,KAJA,EAKA,MAAA,CAAA,MALA;AAOA,QAAA,OAAA,CAAA,OAAA,GAbA,CAeA;;AACA,YAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAhBA,CAkBA;;AACA,YAAA,WAAA,KAAA,CAAA,EAAA,iBAAA,IAAA,IAAA,CAnBA,CAoBA;;AACA,aAAA,IAAA,aAAA,GAAA,CAAA,EAAA,aAAA,IAAA,CAAA,EAAA,aAAA,EAAA,EAAA;AACA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,iBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,KAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,CAAA,KAAA,CAAA,EAAA,iBAAA,IAAA,GAAA;AAEA,kBAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,aAAA;AACA,kBAAA,KAAA,GAAA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AAEA,cAAA,iBAAA,IAAA,MAAA,CAAA,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA;;AACA,YAAA,iBAAA,IAAA,IAAA;AACA;AACA;AACA;;AAEA,aAAA,iBAAA;AACA,KAvDA;AAwDA,IAAA,OAxDA,qBAwDA;AACA,UAAA,IAAA,GAAA,IAAA;;AACA,UAAA,IAAA,CAAA,aAAA,KAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,qBAAA,CAAA;AACA;AACA;;AACA,MAAA,OAAA,CAAA,MAAA,CAAA,IAAA,CAAA,aAAA;AACA,MAAA,MAAA,CAAA,aAAA,CAAA,cAAA,CACA,IAAA,CAAA,aADA,EAEA,SAAA,UAAA,CAAA,iBAAA,EAAA;AACA,QAAA,IAAA,CAAA,QAAA,GAAA,cAAA,IAAA,CAAA,SAAA,IAAA,QAAA,IAAA,OAAA,CADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,YAAA,IAAA,GAAA,IAAA,IAAA,CAAA,CAAA,iBAAA,CAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAbA,CAcA;;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,IAAA,EAfA,CAiBA;AACA,OApBA;AAsBA,KArFA;AAsFA,IAAA,SAtFA,uBAsFA;AACA,UAAA,IAAA,GAAA,IAAA,CADA,CAEA;;AACA,UAAA,IAAA,CAAA,aAAA,KAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,qBAAA,CAAA;AACA;AACA,OANA,CAOA;;;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,MAAA,UAAA,CAAA,IAAA,GAAA,KAAA,aAAA,CATA,CAUA;;AACA,MAAA,UAAA,CAAA,QAAA,GAAA,cAAA,IAAA,CAAA,SAAA,IAAA,QAAA,IAAA,MAAA;AAEA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAbA,CAeA;AACA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AAEA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,UAAA;AAEA,aAAA,UAAA,CAAA,YAAA,CAAA,MAAA,CAAA;AACA;AA7GA,GARA;AAuHA,EAAA,OAvHA,qBAuHA;AACA,QAAA,IAAA,GAAA,IAAA,CADA,CAGA;;AACA,QAAA,aAAA,GAAA,IAAA,CAJA,CAKA;;AACA,IAAA,IAAA,CAAA,aAAA,GAAA,6BAAA;AACA,IAAA,qBAAA;AACA,IAAA,QAAA,CAAA,aAAA,CAAA,wBAAA;AAEA,IAAA,QAAA,CAAA,aAAA,CAAA,0BAAA;AAEA,IAAA,QAAA,CACA,aADA,CACA,qBADA,EAEA,gBAFA,CAEA,OAFA,EAEA,YAAA;AACA;AACA,UAAA,YAAA,GACA,QAAA,CAAA,aAAA,CAAA,qBAAA,EAAA,KAAA,GAAA,GADA;AAEA,UAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CACA,+BADA,CAAA;AAGA,MAAA,UAAA,CAAA,SAAA,kDAAA,YAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAPA,CAQA;;AACA,MAAA,qBAAA;AACA,KAZA;AAaA,IAAA,QAAA,CAAA,aAAA,CAAA,YAAA,EAAA,gBAAA,CAAA,OAAA,EAAA,YAAA;AACA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,aAAA,CAAA,YAAA,EAAA,KAAA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,sBAAA,CAAA;AACA,MAAA,UAAA,CAAA,SAAA,4CAAA,SAAA,QAJA,CAKA;;AACA,MAAA,qBAAA;AACA,KAPA;AAQA,IAAA,QAAA,CACA,aADA,CACA,cADA,EAEA,gBAFA,CAEA,OAFA,EAEA,YAAA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,aAAA,CAAA,cAAA,EAAA,KAAA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,wBAAA,CAAA,CAFA,CAGA;;AACA,MAAA,qBAAA;AACA,KAPA;AAQA,IAAA,QAAA,CAAA,aAAA,CAAA,YAAA,EAAA,gBAAA,CAAA,QAAA,EAAA,YAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA,IAAA,CAFA,CAGA;;AACA,MAAA,IAAA,CAAA,SAAA,GACA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,KACA,IAAA,CAAA,SAFA,CAJA,CAOA;;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,UAAA,KAAA,EAAA;AACA,QAAA,IAAA,CAAA,aAAA,GAAA,KAAA,CAAA,MAAA,CAAA,MAAA;AACA,QAAA,qBAAA;AACA,OAHA;;AAIA,MAAA,MAAA,CAAA,aAAA,CAAA,IAAA;AACA,KAdA;;AAgBA,aAAA,qBAAA,GAAA;AACA;AACA,UAAA,YAAA,GACA,QAAA,CAAA,aAAA,CAAA,qBAAA,EAAA,KAAA,GAAA,GADA;AAEA,UAAA,SAAA,GAAA,QAAA,CAAA,aAAA,CAAA,YAAA,EAAA,KAAA;AACA,UAAA,WAAA,GAAA,QAAA,CAAA,aAAA,CAAA,cAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAA,KAAA,EAAA;AACA,eAAA,kBAAA,IAAA,CAAA,KAAA,CAAA;AACA;;AACA,UAAA,CAAA,GAAA,IAAA,MAAA,GAAA,KAAA;AACA,MAAA,CAAA,CAAA,KAAA,GAAA,WAAA;;AACA,UACA,WAAA,KAAA,EAAA,IACA,CAAA,CAAA,KAAA,IAAA,WAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAFA,EAGA;AACA;AACA,QAAA,WAAA,GAAA,OAAA;AACA;;AACA,MAAA,MAAA,CAAA,aAAA,CAAA,eAAA,CACA,IAAA,CAAA,aADA,EAEA,YAFA,EAGA,SAHA,EAIA,WAJA,EAKA,SAAA,UAAA,CAAA,SAAA,EAAA;AACA,QAAA,aAAA,GAAA,SAAA;AACA,YAAA,eAAA,GAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,QAAA,eAAA,CAAA,GAAA,GAAA,aAAA;AACA,QAAA,IAAA,CAAA,aAAA,GAAA,aAAA,CAJA,CAKA;;AACA,YAAA,SAAA,GAAA,QAAA,CAAA,aAAA,CAAA,iBAAA,CAAA;;AACA,eAAA,SAAA,CAAA,UAAA;AACA,UAAA,SAAA,CAAA,WAAA,CAAA,SAAA,CAAA,UAAA;AADA;;AAEA,QAAA,SAAA,CAAA,WAAA,CAAA,eAAA;AACA,OAfA;AAiBA;AACA;AApNA,CAAA","sourcesContent":["<template>\n  <div class=\"markerTraining\"></div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  data() {\n    return {\n      innerImageURL: \"inner-images/inner-arjs.png\",\n      fullMarkerURL: null,\n      imageName: null\n    };\n  },\n  methods: {\n    createPatternFileString() {\n      var image = new Image();\n      // copy image on canvas\n      var canvas = document.createElement(\"canvas\");\n      var context = canvas.getContext(\"2d\");\n      canvas.width = 16;\n      canvas.height = 16;\n\n      // document.body.appendChild(canvas)\n      // canvas.style.width = '200px'\n\n      var patternFileString = \"\";\n      for (\n        var orientation = 0;\n        orientation > -2 * Math.PI;\n        orientation -= Math.PI / 2\n      ) {\n        // draw on canvas - honor orientation\n        context.save();\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.translate(canvas.width / 2, canvas.height / 2);\n        context.rotate(orientation);\n        context.drawImage(\n          image,\n          -canvas.width / 2,\n          -canvas.height / 2,\n          canvas.width,\n          canvas.height\n        );\n        context.restore();\n\n        // get imageData\n        var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        // generate the patternFileString for this orientation\n        if (orientation !== 0) patternFileString += \"\\n\";\n        // NOTE bgr order and not rgb!!! so from 2 to 0\n        for (var channelOffset = 2; channelOffset >= 0; channelOffset--) {\n          // console.log('channelOffset', channelOffset)\n          for (var y = 0; y < imageData.height; y++) {\n            for (var x = 0; x < imageData.width; x++) {\n              if (x !== 0) patternFileString += \" \";\n\n              var offset = y * imageData.width * 4 + x * 4 + channelOffset;\n              var value = imageData.data[offset];\n\n              patternFileString += String(value).padStart(3);\n            }\n            patternFileString += \"\\n\";\n          }\n        }\n      }\n\n      return patternFileString;\n    },\n    getPatt() {\n      const self = this;\n      if (self.innerImageURL === null) {\n        alert(\"upload a file first\");\n        return;\n      }\n      console.assert(self.innerImageURL);\n      THREEx.ArPatternFile.encodeImageURL(\n        self.innerImageURL,\n        function onComplete(patternFileString) {\n          self.fileName = \"pattern-\" + (self.imageName || \"marker\") + \".patt\";\n          // tech from https://stackoverflow.com/questions/3665115/create-a-file-in-memory-for-user-to-download-not-through-server\n          // var domElement = window.document.createElement(\"a\");\n          // domElement.href = window.URL.createObjectURL(\n          //   new Blob([patternFileString], { type: \"text/plain\" })\n          // );\n          // domElement.download = self.fileName;\n          // document.body.appendChild(domElement);\n          // domElement.click();\n\n          // stateにパターンのダウンロードURLをセット\n          var blob = new Blob([patternFileString], { type: \"text/plain\" });\n          console.log(\"getPatt\");\n          // console.log(domElement.href);\n          self.$emit(\"blob\", blob);\n\n          // document.body.removeChild(domElement);\n        }\n      );\n    },\n    getMarker() {\n      const self = this;\n      // debugger\n      if (self.innerImageURL === null) {\n        alert(\"upload a file first\");\n        return;\n      }\n      // tech from https://stackoverflow.com/questions/3665115/create-a-file-in-memory-for-user-to-download-not-through-server\n      var domElement = window.document.createElement(\"a\");\n      domElement.href = this.fullMarkerURL;\n      // set fileName\n      domElement.download = \"pattern-\" + (self.imageName || \"marker\") + \".png\";\n\n      document.body.appendChild(domElement);\n\n      // クリックイベントでダウンロード\n      // domElement.click();\n      //\n      console.log(\"getMarker\");\n\n      document.body.removeChild(domElement);\n\n      return domElement.getAttribute(\"href\");\n    }\n  },\n  mounted() {\n    const self = this;\n\n    // var innerImageURL = null;\n    var fullMarkerURL = null;\n    // var imageName = null;\n    self.innerImageURL = \"inner-images/inner-arjs.png\";\n    updateFullMarkerImage();\n    document.querySelector(\"#buttonDownloadEncoded\");\n\n    document.querySelector(\"#buttonDownloadFullImage\");\n\n    document\n      .querySelector(\"#patternRatioSlider\")\n      .addEventListener(\"input\", function() {\n        // update the patternRatio number\n        var patternRatio =\n          document.querySelector(\"#patternRatioSlider\").value / 100;\n        var domElement = document.querySelector(\n          \"[for=patternRatioSlider] span\"\n        );\n        domElement.innerHTML = `パターン比率 ${patternRatio.toFixed(2)}`;\n        // update fullMarkerImage\n        updateFullMarkerImage();\n      });\n    document.querySelector(\"#imageSize\").addEventListener(\"input\", function() {\n      // update the patternRatio number\n      var imageSize = document.querySelector(\"#imageSize\").value;\n      var domElement = document.querySelector(\"[for=imageSize] span\");\n      domElement.innerHTML = `画像サイズ ${imageSize}px`;\n      // update fullMarkerImage\n      updateFullMarkerImage();\n    });\n    document\n      .querySelector(\"#borderColor\")\n      .addEventListener(\"input\", function() {\n        var imageSize = document.querySelector(\"#borderColor\").value;\n        var domElement = document.querySelector(\"[for=borderColor] span\");\n        // update fullMarkerImage\n        updateFullMarkerImage();\n      });\n    document.querySelector(\"#fileinput\").addEventListener(\"change\", function() {\n      var file = this.files[0];\n      self.imageName = file.name;\n      // remove file extension\n      self.imageName =\n        self.imageName.substring(0, self.imageName.lastIndexOf(\".\")) ||\n        self.imageName;\n      // debugger\n      var reader = new FileReader();\n      reader.onload = function(event) {\n        self.innerImageURL = event.target.result;\n        updateFullMarkerImage();\n      };\n      reader.readAsDataURL(file);\n    });\n\n    function updateFullMarkerImage() {\n      // get patternRatio\n      var patternRatio =\n        document.querySelector(\"#patternRatioSlider\").value / 100;\n      var imageSize = document.querySelector(\"#imageSize\").value;\n      var borderColor = document.querySelector(\"#borderColor\").value;\n      function hexaColor(color) {\n        return /^#[0-9A-F]{6}$/i.test(color);\n      }\n      var s = new Option().style;\n      s.color = borderColor;\n      if (\n        borderColor === \"\" ||\n        (s.color != borderColor && !hexaColor(borderColor))\n      ) {\n        // if color not valid, use black\n        borderColor = \"black\";\n      }\n      THREEx.ArPatternFile.buildFullMarker(\n        self.innerImageURL,\n        patternRatio,\n        imageSize,\n        borderColor,\n        function onComplete(markerUrl) {\n          fullMarkerURL = markerUrl;\n          var fullMarkerImage = document.createElement(\"img\");\n          fullMarkerImage.src = fullMarkerURL;\n          self.fullMarkerURL = fullMarkerURL;\n          // put fullMarkerImage into #imageContainer\n          var container = document.querySelector(\"#imageContainer\");\n          while (container.firstChild)\n            container.removeChild(container.firstChild);\n          container.appendChild(fullMarkerImage);\n        }\n      );\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.markerTraining {\n  display: flex;\n\n  .mdl-grid {\n    .mdl-cell {\n      * {\n        margin-bottom: 15px;\n      }\n\n      label {\n        display: block;\n        cursor: pointer;\n\n        * {\n          cursor: pointer;\n        }\n\n        input {\n          display: block;\n        }\n      }\n\n      .mdl-tooltip {\n        display: none;\n      }\n\n      #buttonUpload {\n        border: 1px solid black;\n        border-radius: 5px;\n        padding: 10px;\n      }\n    }\n  }\n\n  #marker {\n    width: 40%;\n    margin: 0 !important;\n  }\n\n  // h1 {\n  //   text-align: center;\n  //   font-size: 500%;\n  // }\n\n  // div.mdl-cell {\n  //   text-align: center;\n  // }\n\n  // h1 a {\n  //   text-decoration: none;\n  // }\n\n  // h1 a:hover {\n  //   text-decoration: underline;\n  // }\n\n  #imageContainer img {\n    width: 100%;\n    max-width: 512px;\n  }\n}\n</style>"],"sourceRoot":"src/views/create"}]}